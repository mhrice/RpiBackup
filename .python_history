exit9)
exit()
donkey
import donkey
import donkeycar as dk
dk createcar --path ~/d2t
dk createcar 
dk.createcar()
dk.create_car
dk.createCar
exit()
quit()
import adafruit_vl53l0x
quit()
import board
import busio
import adafruit_vl53l0x
i2c = busio.I2C(board.SCL, board.SDA)
sensor = adafruit_vl53l0x.VL53L0X(i2c)
quit()
import board
import busio
import adafruit_vl53l0x
i2c = busio.I2C(board.SCL, board.SDA)
print(i2c)
print(i2c.port)
for property, value in vars(i2c).iteritems():
print(property,value)
for property, value in vars(i2c).iteritems():
	print(property,value)
for elem in i2c:
	print(elem)
dir(i2c)
sensor = adafruit_vl53l0x.VL53L0X(i2c)
quit()
import board
import busio
import adafruit_vl53l0x
i2c = busio.I2C(board.SCL, board.SDA)
sensor = adafruit_vl53l0x.VL53L0X(i2c)
quit()
import board
import busio
import adafruit_vl53l0x
i2c = busio.I2C(board.SCL, board.SDA)
sensor = adafruit_vl53l0x.VL53L0X(i2c)
quit()
import VL53L1X
tof = VL53L1X.VL53L1X(i2c_bus=1, i2c_address=0x29)
tof.ope()
tof.open()
tof.start_ranging(1)
distance_in_mm = tof.get_distance()
print(distance_in_mm)
distance_in_mm = tof.get_distance()
print(distance_in_mm)
distance_in_mm = tof.get_distance()
print(distance_in_mm)
quit()
